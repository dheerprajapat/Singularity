@inject IJSRuntime runtime
@inject AudioManager AudioManager

@if (Song is not null)
{
    <Glass Class="track" Blur="20" BackgroundColor="rgba(192, 182, 230, 0.2)" Style="@(IsPlaying ? activeStyle : "")" Clicked="()=>AudioManager.AddAndPlayAsync(Song)">
        <div class="control">
            <div style="width:20%">
                <img class="cover-img @(IsPlaying ? "circularMotion" : "")" src="@Song.Video.Thumbnails.MaxBy(x=>x.Resolution.Area).Url" />
            </div>
            <div class="detail" style="width:70%">
                <p><b>@Song.Video.Title</b></p>
                <p>
                    <span style="margin:3px">@Song.Video.Author</span>
                </p>
            </div>
            <div class="music-bar" style="width:10%">
                @if (IsPlaying)
                {
                    <MusicBar></MusicBar>
                }
            </div>
        </div>
    </Glass>
}

@code
{
    [Parameter]
    public AudioItem? Song { get; set; }


    private string activeStyle = "background-color:rgba(117,132,147,0.4);";

    private bool IsPlaying = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        AudioManager.OnAudioPlayPlaused += OnAudioPlayPlaused;
    }

    private void OnAudioPlayPlaused(object sender)
    {
        IsPlaying = AudioManager.IsPlaying && Song != null && AudioManager.Current != null && Song.Video.Id == AudioManager.Current.Video.Id;
        StateHasChanged();
    }
}

<style>
    .playing {
    }

    .track {
        height: 4rem;
        color: white;
        border-radius: 25px;
    }

    .control {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 100%;
    }

    .circularMotion {
        animation: circularMotion 10s infinite linear;
    }

    .detail {
        display: flex;
        flex-direction: column;
        align-items: start;
    }

    .cover-img {
        border-radius: 20px;
        border-color: 1px solid rgba(66, 245, 209,0.5);
        display: flex;
        align-items: center;
        width: 40px;
        height: 40px;
        margin-top: 4px;
        margin-left: 10px;
    }

    .music-bar {
    }

    @@keyframes circularMotion {
        from {
            transform: rotateZ(0deg);
        }

        to {
            transform: rotateZ(360deg);
        }
    }
</style>
