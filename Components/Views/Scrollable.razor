@implements IDisposable
<Glass Blur="20" Style="width: 100%;bottom: 0px;position:absolute" Class="@(IsActive ? "scroll-page-active" : "scroll-page-nonactive")" BackgroundColor="rgba(60, 33, 146, 0.6)">
    <div class="scroll-page-header" @onclick="ClosePage">
        <img src="./images/cross.svg" height="32" width="32" />
    </div>
    @ChildContent
</Glass>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public bool IsActive { get; set; }
    [Parameter]
    public EventCallback OnCloseButtonClick { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        MainPage.OnBackButtonPress += OnBackButtonPress;
    }
    public void Dispose()
    {
        MainPage.OnBackButtonPress -= OnBackButtonPress;
    }
    private async Task ClosePage()
    {
        await OnCloseButtonClick.InvokeAsync();
    }


    private bool OnBackButtonPress()
    {
        if(IsActive)
        {
            ClosePage();
            return true;
        }
        return false;
    }
}

<style>
    .scroll-page{
        
    }

    .scroll-page-active{
        height : 100%;
        transition: height 0.5s;
        z-index: 100;
    }

    .scroll-page-nonactive{
        height:0%;
        transition: height 0.5s,z-index 1s;
        z-index: -100;
    }

    .scroll-page-header{
        margin: 10px;
        position: absolute;
        z-index: 1000;
        right: 0px;
    }
</style>