@using BlazorBindGen;
@inject IJSRuntime Runtime;

<div @ref="DivReference" data-long-press-delay="@Delay" style="@Style" class="@Class" id="@Id" @onclick="()=>Clicked.InvokeAsync()">
    @ChildContent
</div>

@code
{
    ElementReference DivReference;

    [Parameter]
    public int Delay { get; set; } = 300;

    [Parameter]
    public EventCallback LongPressed { get; set; }

    [Parameter]
    public EventCallback Clicked { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Style { get; set; }

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public string Id { get; set; }

    private LongPressItemContext LongPressItemContext;

    protected override async Task OnInitializedAsync()
    {
        LongPressItemContext = new LongPressItemContext()
        {
            LongPressCallbackAction = LongPressedInternal
        };

        await BindGen.InitAsync(Runtime);
        await BindGen.Window.CallVoidAsync("makeItPressable",DivReference, LongPressItemContext.Dotnet);
    }

    private void LongPressedInternal()
    {
        LongPressed.InvokeAsync();
    }

}