@inject IJSRuntime Runtime
@inject NavigationManager Nav

<div id="glassTopHeader">
    <div style="height:60px;display:flex;justify-content:space-between;align-items:center;margin-left:8px;margin-right:8px;padding:4px">

    @if(!IsSearchPage)
    {
        <div class="title">@Title</div>
        <img src="./images/search.svg" width="32" height="32" @onclick="GoToSearch" />
    }
    else
    {
        <MudAutocomplete T="string" Label="Search" Style="margin:16px" SearchFuncWithCancel="SuggestionsAsync" ValueChanged="(s)=>OnSearch.InvokeAsync(s)"
                   Immediate AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />
    }
    </div>

</div>
<div style="padding: 10px;height: calc(100vh - 200px);overflow-y: auto;scrollbar-width:none">
    @ChildContent
</div>


@code
{

    private const string SearchUrl = "https://clients1.google.com/complete/search?client=youtube&gs_ri=youtube&ds=yt&q=";


    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private static HttpClient Http = new HttpClient();

    private bool IsSearchPage => Nav.Uri.EndsWith("search");

    [Parameter]
    public EventCallback<string> OnSearch { get; set; }


    private void GoToSearch()
    {
        if(!IsSearchPage)
            Nav.NavigateTo("/search");
    }

    public async Task<IEnumerable<string>> SuggestionsAsync(string query, CancellationToken token = default)
    {
        var original = query;
        query = Uri.EscapeDataString(query);
        query = SearchUrl + query;
        var res = await Http.GetAsync(query, token);
        var js = await res.Content.ReadAsStringAsync(token);

        var parts = js.Split('[').Where(t => t.Split('"').Length > 2).Select(t => t.Split('"')[1]);

        return parts.Distinct().ToList();
    }
}


<style>
    
    .title {
        color: white;
        font-size: 22px;
        margin-left:0px;
    }
    #glassTopHeader
    {
        background-color: rgba(66, 245, 209,0.1);
        border: 1px solid rgba(66, 203, 245,0.5);
        backdrop-filter: blur(80px);
        margin-top: -10px;
        width: 100%;
        border-bottom-left-radius: 20px;
        border-bottom-right-radius: 20px;
    }
</style>

