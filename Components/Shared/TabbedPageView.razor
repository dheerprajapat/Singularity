@inject IJSRuntime Runtime
@inject NavigationManager Nav
@inject AudioManager AudioManager

<div id="glassTopHeader">
    <div style="height:60px;display:flex;justify-content:space-between;align-items:center;margin-left:8px;margin-right:8px;padding:4px;padding-top:8px">

    @if(!IsSearchPage)
    {
        <img src="./images/icon.svg" width="40" height="40"/>
        <div class="title">@Title</div>
        <img src="./images/search.svg" width="28" height="28" @onclick="GoToSearch" />
    }
    else
    {
        <input @bind-value="lastSearch" id="search" type="search" @oninput="OnSearchChanged" @onkeyup="OnSearchFinished"/>
    }
    </div>

</div>
<div style="padding: @(Padding);height: calc(100vh - @(!isMusicViewInitialized?120:200)px);overflow-y: auto;scrollbar-width:none" class="scrollbar-hidden">
    @ChildContent
</div>


@code
{



    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string Padding { get; set; } = "10px";


    private bool IsSearchPage => Nav.Uri.EndsWith("search");

    private bool isMusicViewInitialized=false;
    private string lastSearch=string.Empty;

    [Parameter]
    public EventCallback<(string SearchTerm,bool Finalized)> OnSearch { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        MusicView.OnMusicViewInit = () =>
        {
            isMusicViewInitialized = true;
            StateHasChanged();
        };
    }

    public void UpdateLastSearch(string newsearch)
    {
        lastSearch = newsearch;
        StateHasChanged();
    }

    private void GoToSearch()
    {
        if(!IsSearchPage)
            Nav.NavigateTo("/search");
    }

    private void OnSearchChanged(ChangeEventArgs e)
    {
        lastSearch = e.Value!.ToString()!;
        OnSearch.InvokeAsync((lastSearch, false)!);
    }
    private void OnSearchFinished(KeyboardEventArgs e)
    {
        if(e.Code=="Enter")
            OnSearch.InvokeAsync((lastSearch, true)!);
    }
}


<style>
    
    .title {
        color: white;
        font-size: 22px;
        margin-left:0px;
    }
    #glassTopHeader
    {
        background-color: rgba(255, 245, 209,0.1);
        border: 1px solid rgba(235, 122, 52,0.5);
        backdrop-filter: blur(50px);
        margin-top: -10px;
        width: 100%;
        transform: translateZ(0);
    }

    .scrollbar-hidden::-webkit-scrollbar {
        display: none;
    }

    /* Hide scrollbar for IE, Edge add Firefox */
    .scrollbar-hidden {
        -ms-overflow-style: none;
        scrollbar-width: none; /* Firefox */
    }

    #search
    {
        width: 100%;
        outline: none;
        border: none;
        border: 1px solid rgba(255, 255, 255, 0.2);
        background: rgba(255, 255, 255, 0.2);
        padding: 8px 10px;
        padding-left: 40px;
        border-radius: 15px;
        color: #fff;
        font-size: 16px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    }
</style>

