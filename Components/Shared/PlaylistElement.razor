
<Glass Class="playlist-element" Blur="0" BackgroundColor="rgba(192, 182, 230, 0)" Clicked="async ()=>{await Clicked.InvokeAsync(PlaylistName);}">
    <div style="width:15%; display: flex;justify-content: center;align-items: center;margin:4px;">
        <img src="./images/music.svg" height="32" width="32" />
    </div>
    <div style="width:75%;display: flex;flex-direction: column;justify-content:center">
        <div>
            <p style="display:flex;"><b>@PlaylistName</b></p>
        </div>
        <div style="display:flex">
            <p>Playlist * Dhiraj Kumar</p>
        </div>
    </div>
    @if (IsPlaylistSelectionEnable)
    {
        <div style="width: 10%; display:flex;align-items:center;" @onclick:stopPropagation="IsPlaylistPage">
            <input class="checkbox" checked="@IsChecked" type="checkbox" @oninput="async () => await Checked.InvokeAsync()"/>
        </div>
    }
</Glass>

@code {
    [Parameter]
    public string? PlaylistName { get; set; }
    [Parameter]
    public EventCallback<string> Clicked { get; set; }
    [Parameter]
    public EventCallback<string> Checked { get; set; }
    [Parameter]
    public bool IsPlaylistSelectionEnable { get; set; } = false;
    [Parameter]
    public bool IsPlaylistPage { get; set; } = false;
    [Parameter]
    public bool IsChecked { get; set; }
}

<style>
    .playlist-element
    {
        color : white;
        display: flex;
        border-radius: 25px;
        height: 3.5rem;
        margin-bottom: 5px;
    }

    .checkbox {
        width: 1.5em;
        height: 1.5em;
        cursor: pointer;
        accent-color: green;
    }

   
    
</style>
