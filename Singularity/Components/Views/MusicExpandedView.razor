@using CommunityToolkit.Maui.Core.Primitives
@using Singularity
@using Singularity.Data
@if (AudioManager.CurrentSong != null)
{
    <NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation" />
    <div class="toggle-music">
        <div style="margin-top:60px;">
            <div style="display:flex;justify-content:space-between;margin:20px">
                <img src="./images/backArrow.svg" width="24" height="24" style="position:absolute;top:8px" @onclick="()=>OnToggled.InvokeAsync()" />
                <img src="./images/menu-bar.svg" width="28" height="28" style="position:absolute;top:8px;right:23px;" />
            </div>
            <img class="cover-image" src="@AudioManager.CurrentSong.ThumbnailUrl" />
            <div style="display:flex;justify-content:center">
                <div style="display:flex;flex-direction:column;align-items:center;color:white;margin:40px 20px;">
                    <div>
                        <p class="ellepsis"><b>@AudioManager.CurrentSong.Name</b></p>
                        <p class="ellepsis">@AudioManager.CurrentSong.Singer</p>
                    </div>
                </div>
            </div>

            <div style="position:absolute;bottom:60px;width:100vw">
                <div style="display:flex;justify-content:space-between;margin:20px 40px">
                    <img src=@("./images/download.svg") height="32" width="32" />

                    @if(UserSettings.Current.IsLiked(AudioManager.CurrentSong))
                    {
                        <img src=@("./images/solid-heart.svg") height="32" width="32" @onclick="AddOrRemoveFromLiked"/>
                    }
                    else
                    {
                        <img src=@("./images/heart.svg") height="32" width="32" @onclick="AddOrRemoveFromLiked" />
                    }
                </div>

                <div>
                    <div style="display:flex;justify-content:space-between;margin:20px 40px">
                        <p><b>@AudioManager.MediaPlayer.Position.ToMusicString()</b></p>
                        <p><b>@AudioManager.MediaPlayer.Duration.ToMusicString()</b></p>
                    </div>
                    <input type="range" value="@((int)AudioManager.MediaPlayer.Position.TotalSeconds)"
                           max="@((int)AudioManager.MediaPlayer.Duration.TotalSeconds)" @oninput="OnInputRangeSlider"
                           ValueChanged="(d)=>OnSliderChange(d)" />
                </div>
                <div style="display:flex;justify-content:space-between;margin:30px;align-items:center">
                    <img src="./images/add-to-playlist.svg" height="32" width="32" @onclick="ShowAddToPlaylist" />
                    <img src="./images/backward.svg" height="32" width="32" @onclick="async()=>await AudioManager.PlayPreviousSongAsync()" />
                    <button style="width:48px;height:48px;border-radius:28px;background:none;border-color:pink" @onclick="HandlePlayPause">
                        @if (AudioManager.MediaPlayer.CurrentState == MediaElementState.Playing)
                        {
                            <img src="./images/pause.svg" height="32" width="32" />
                        }
                        else if (AudioManager.MediaPlayer.CurrentState == MediaElementState.Opening
                        || AudioManager.MediaPlayer.CurrentState == MediaElementState.Buffering)
                        {
                            <img src="./images/cloud.svg" height="32" width="32" />
                        }
                        else
                        {
                            <img src="./images/play.svg" height="32" width="32" />
                        }
                    </button>

                    <img src="./images/forward.svg" height="32" width="32" @onclick="async()=>await AudioManager.PlayNextSongAsync()" />
                    <img src="@GetLoopImage()" height="32" width="32" @onclick="ChangeLoopMode" />


                </div>
            </div>

        </div>
    </div>

    <AddToPlaylistView @ref="addToPlaylistView"/>
}

<style>

    .ellepsis {
        width: 86vw;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .toggle-music {
        background: rgba(7,17,27,0.6);
        backdrop-filter: blur(60px);
        height: 100vh;
        width: 100%;
        position: absolute;
        bottom: 0px;
        transition: height 0.5s, bottom 0.5s;
    }


    .toggle-controls {
        height: 85vh;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }

    .cover-image {
        height: 36vh;
        width: 36vh;
        border-radius: 25px;
    }

    input[type=range] {
        width: 80vw;
        height: 6px;
    }

    #sliderContainer {
        margin-left: auto !important;
        margin-right: auto !important;
        text-align: center;
    }

    .range {
        -webkit-appearance: none;
        -moz-appearance: none;
        margin-top: 10px;
        padding: 10px;
        background-color: transparent;
    }

    input[type=range]::-webkit-slider-runnable-track {
        -webkit-appearance: none;
        background: rgba(59, 173, 227, 1);
        background: -moz-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: -webkit-gradient(left bottom, right top, color-stop(0%, rgba(59, 173, 227, 1)), color-stop(25%, rgba(87, 111, 230, 1)), color-stop(51%, rgba(152, 68, 183, 1)), color-stop(100%, rgba(255, 53, 127, 1)));
        background: -webkit-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: -o-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: -ms-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#3bade3 ', endColorstr='#ff357f ', GradientType=1);
        height: 4px;
    }

    input[type=range]:focus {
        outline: none;
    }

    input[type=range]::-moz-range-track {
        -moz-appearance: none;
        background: rgba(59, 173, 227, 1);
        background: -moz-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: -webkit-gradient(left bottom, right top, color-stop(0%, rgba(59, 173, 227, 1)), color-stop(25%, rgba(87, 111, 230, 1)), color-stop(51%, rgba(152, 68, 183, 1)), color-stop(100%, rgba(255, 53, 127, 1)));
        background: -webkit-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: -o-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: -ms-linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        background: linear-gradient(45deg, rgba(59, 173, 227, 1) 0%, rgba(87, 111, 230, 1) 25%, rgba(152, 68, 183, 1) 51%, rgba(255, 53, 127, 1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#3bade3 ', endColorstr='#ff357f ', GradientType=1);
        height: 2px;
    }

    input[type=range]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        border: 2px solid;
        border-radius: 50%;
        height: 20px;
        width: 20px;
        max-width: 80px;
        position: relative;
        bottom: 8px;
        background-color: deeppink;
        cursor: -webkit-grab;
        -webkit-transition: border 1000ms ease;
        transition: border 1000ms ease;
    }

    input[type=range]::-moz-range-thumb {
        -moz-appearance: none;
        border: 2px solid;
        border-radius: 50%;
        height: 20px;
        width: 20px;
        max-width: 80px;
        position: relative;
        bottom: 11px;
        background-color: deeppink;
        cursor: -moz-grab;
        -moz-transition: border 1000ms ease;
        transition: border 1000ms ease;
    }



    .range.blue::-webkit-slider-thumb {
        border-color: rgb(59, 173, 227);
    }

    .range.ltpurple::-webkit-slider-thumb {
        border-color: rgb(87, 111, 230);
    }

    .range.purple::-webkit-slider-thumb {
        border-color: rgb(152, 68, 183);
    }

    .range.pink::-webkit-slider-thumb {
        border-color: rgb(255, 53, 127);
    }

    input[type=range]::-webkit-slider-thumb:active {
        cursor: -webkit-grabbing;
    }

    input[type=range]::-moz-range-thumb:active {
        cursor: -moz-grabbing;
    }

</style>