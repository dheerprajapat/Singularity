@using CommunityToolkit.Maui.Core.Primitives
@inject IMusicHub MusicHub

@if (Song is not null)
{
    <Glass Class="track" Blur="20" BackgroundColor="@BackgroundColor()" Style="@(IsPlaying ? string.Empty : "margin-top:4px")"  Clicked="AddAndPlayAsync">
        <div class="control">
            <div style="width: 50px;height: 50px;" class="@(isSongLoading ? "circular-spin" : "")">
                <img class="cover-img @(IsPlaying ? "circularMotion" : "")" style="@(isSongLoading ? "border: none;" : "")" src="@Song.ThumbnailUrl" />
            </div>
            <div class="detail" style="">
                <p class="ellepsis">@Song.Name</p>
                <div class="ellepsis" style="display:flex;justify-content:space-between">
                    <span style="margin:3px;font-weight:bold">@Song.Singer</span>
                    <span style="margin:3px;font-weight:bold">@Song.Duration.GetValueOrDefault().ToMusicString()</span>
                </div>
            </div>
             <div class="music-bar" style="width:30px">
                @if (IsPlaying)
                {
                    <MusicBar></MusicBar>
                }

                </div>
            
        </div>
    </Glass>
}
else
{
    
}

<style>
    .ellepsis {
        width: 45vw;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: left;
    }

    .playing {
    }

    .track {
        height: 4rem;
        color: white;
        border-radius: 25px;
        margin-top:4px;
    }

    .control {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 100%;
        padding: 4px;
    }

    .circularMotion {
        animation: circularMotion 10s infinite linear;
    }

    .detail {
        margin-left:4px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        justify-items: left;
        align-content: space-between;
        align-items: start;
    }

    .cover-img {
        border-radius: 50%;
        border: 2px solid rgba(66, 245, 209,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        width: 97%;
        height: 97%;
    }

    .music-bar {
        margin-left: 8px
    }

    @@keyframes circularMotion {
        from {
            transform: rotateZ(0deg);
        }

        to {
            transform: rotateZ(360deg);
        }
    }

    .circular-spin {
        position: relative;
        border: 2px solid transparent;
        border-radius: 50%;
        background-color: black;
    }

        .circular-spin::before {
            content: '';
            position: absolute;
            top: -4px;
            left: -4px;
            width: calc(100% + 4px);
            height: calc(100% + 4px);
            border: 2px solid #ef5a74;
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
